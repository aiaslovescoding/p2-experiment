{"version":3,"sources":["createCar.js","commands.js","Controls.jsx","App.js","reportWebVitals.js","index.js"],"names":["createCar","car","Composite","create","label","group","Body","nextGroup","carBody","Bodies","rectangle","collisionFilter","frontWheel","circle","friction","backWheel","frontAxle","Constraint","bodyB","pointB","x","y","bodyA","stiffness","length","backAxle","add","addConstraint","mouseXDistance","mouseStart","mouseFinish","Math","abs","commands","name","doCommand","engine","mouseXMiddle","mouseYMiddle","width","height","mouseYDistance","isStatic","World","world","radius","mouseDistance","pyraWidth","round","pyramid4","Composites","pyramid","indexedCommands","Object","assign","map","command","defaultCommand","getCommand","commandName","Controls","props","onClick","setCommand","App","useState","mouse","setMouse","setEngine","setMouseStart","useEffect","Array","from","document","getElementById","children","forEach","child","remove","initMouse","Mouse","initEngine","Engine","render","Render","element","options","showAngleIndicator","showCollisions","showDebug","showPositions","showIds","showShadows","showVertexNumbers","showVelocity","showSeparations","ground","myConstraint","pointA","position","angularStiffness","strokeStyle","lineWidth","mouseConstraint","MouseConstraint","constraint","pyramid2","runner","run","Events","on","setAngularVelocity","init","className","id","onMouseDown","onMouseUp","commandToExecute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5ff5c8fa.chunk.js","sourcesContent":["import { Bodies, Constraint, Composite, Body} from 'matter-js';\r\n\r\nfunction createCar() {\r\n    const car = Composite.create({ label: 'Car' });\r\n    const group = Body.nextGroup(true);\r\n\r\n    const carBody = Bodies.rectangle(200, 60, 200, 20, {\r\n        collisionFilter: {\r\n            group: group\r\n        }\r\n    })\r\n\r\n    const frontWheel = Bodies.circle(100, 60, 70, {\r\n        collisionFilter: {\r\n            group: group\r\n        },\r\n        friction: 0.8,\r\n\r\n    });\r\n    const backWheel = Bodies.circle(300, 60, 70, {\r\n        collisionFilter: {\r\n            group: group\r\n        },\r\n        friction: 0.8\r\n    });\r\n\r\n    const frontAxle = Constraint.create({\r\n        bodyB: carBody,\r\n        pointB: { x: 100, y: 0 },\r\n        bodyA: frontWheel,\r\n        stiffness: 1,\r\n        length: 0\r\n    });\r\n\r\n    const backAxle = Constraint.create({\r\n        bodyB: carBody,\r\n        pointB: { x: -100, y: 0 },\r\n        bodyA: backWheel,\r\n        stiffness: 1,\r\n        length: 0\r\n    });\r\n\r\n    Composite.add(car, carBody)\r\n    Composite.add(car, frontWheel)\r\n    Composite.add(car, backWheel)\r\n\r\n    Composite.addConstraint(car, frontAxle);\r\n    Composite.addConstraint(car, backAxle);\r\n\r\n    return {car, backWheel, frontWheel};\r\n}\r\n\r\nexport default createCar;","import { Bodies, World, Composites } from 'matter-js';\r\nimport createCar from './createCar.js';\r\n\r\nfunction mouseXDistance(mouseStart, mouseFinish) {\r\n    return Math.abs(mouseStart.x - mouseFinish.x);\r\n}\r\n\r\nfunction mouseYDistance(mouseStart, mouseFinish) {\r\n    return Math.abs(mouseStart.y - mouseFinish.y);\r\n}\r\n\r\nfunction mouseDistance(mouseStart, mouseFinish) {\r\n    return ((mouseStart.y - mouseFinish.y) ** 2 + (mouseStart.x - mouseFinish.x) ** 2) ** 0.5;\r\n}\r\n\r\nconst commands = [\r\n    {\r\n        label: 'Make Rectangle',\r\n        name: 'makeRectangle',\r\n        doCommand: function (engine, mouseStart, mouseFinish) {\r\n            const mouseXMiddle = (mouseStart.x + mouseFinish.x) / 2;\r\n            const mouseYMiddle = (mouseStart.y + mouseFinish.y) / 2;\r\n            const width = mouseXDistance(mouseStart, mouseFinish)\r\n            const height = mouseYDistance(mouseStart, mouseFinish)\r\n            const rectangle = Bodies.rectangle(mouseXMiddle, mouseYMiddle, width, height, { isStatic: false });\r\n            World.add(engine.world, rectangle);\r\n        }\r\n    },\r\n    {\r\n        label: 'Make Circle',\r\n        name: 'makeCircle',\r\n        doCommand: function (engine, mouseStart, mouseFinish) {\r\n            const radius = mouseDistance(mouseStart, mouseFinish);\r\n            const circle = Bodies.circle(mouseStart.x, mouseStart.y, radius);\r\n            World.add(engine.world, circle);\r\n        }\r\n    },\r\n    {\r\n        label: 'Make Pyramid',\r\n        name: 'makePyramid',\r\n        doCommand: function (engine, mouseStart, mouseFinish) {\r\n            const shapeSize = 30\r\n            const pyraWidth = Math.round(mouseXDistance(mouseStart, mouseFinish) / shapeSize)\r\n            const pyramid4 = Composites.pyramid(mouseStart.x, mouseStart.y, pyraWidth, 30, 0, 0, function (x, y) {\r\n                return Bodies.rectangle(x, y, shapeSize, shapeSize);\r\n            });\r\n            World.add(engine.world, pyramid4);\r\n        }\r\n    },\r\n    {\r\n        label: 'Make Car',\r\n        name: 'makeCar',\r\n        doCommand: function (engine, mouseStart, mouseFinish) {\r\n            const { car } = createCar();\r\n            World.add(engine.world, car);\r\n        }\r\n    },\r\n    {\r\n        label: 'Do Nothing',\r\n        name: 'doNothing',\r\n        doCommand: function (engine, mouseStart, mouseFinish) {\r\n\r\n        }\r\n    },\r\n]\r\n\r\nconst indexedCommands = Object.assign({}, ...commands.map(command => ({ [command.name]: command })));\r\nconst defaultCommand = indexedCommands['doNothing'];\r\n\r\nfunction getCommand(commandName) {\r\n    return indexedCommands[commandName];\r\n}\r\n\r\nfunction doCommand(commandName, engine, mouseStart, mouseFinish) {\r\n    const commandToExecute = getCommand(commandName);\r\n    if (commandToExecute) {\r\n        commandToExecute.doCommand(engine, mouseStart, mouseFinish)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default commands;\r\nexport { doCommand, defaultCommand, getCommand };","import commands, {getCommand} from './commands.js'\r\n\r\nfunction Controls(props) {\r\n\r\n    function doCommand(name) {\r\n        props.setCommand(name);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {commands.map(command =>\r\n                <button key={command.name} onClick={() => doCommand(command.name)} >\r\n                    {command.label}\r\n                </button>)}\r\n            <div> Command: {getCommand(props.command).label}</div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Controls","import './App.css';\n\nimport { useEffect, useState } from 'react';\nimport { Engine, Render, Bodies, World, MouseConstraint, Mouse, Constraint, Body, Events, Composites } from 'matter-js';\nimport createCar from './createCar.js'\nimport { doCommand, defaultCommand } from './commands'\nimport Controls from './Controls.jsx'\n\nfunction App() {\n\n  const [command, setCommand] = useState(defaultCommand.name);\n  const [mouse, setMouse] = useState(null);\n  const [engine, setEngine] = useState(null);\n  const [mouseStart, setMouseStart] = useState(null);\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <div className=\"App\">\n        <div id=\"physics\" onMouseDown={_onMouseDown} onMouseUp={_onMouseUp}></div>\n        <Controls setCommand={setCommand} command={command}></Controls>\n        <div>\n          {mouseStart && `${mouseStart.x}, ${mouseStart.y}`}\n        </div>\n    </div>\n  );\n\n  function _onMouseDown() {\n    setMouseStart({...mouse.position});\n  }\n\n  function _onMouseUp() {\n    const mouseFinish = mouse.position;\n    doCommand(command, engine, mouseStart, mouseFinish);\n  }\n\n  function init() {\n    Array.from(document.getElementById(\"physics\").children).forEach(child => child.remove())\n    const initMouse = Mouse.create(document.getElementById(\"physics\"));\n    setMouse(initMouse);\n\n    const { car, frontWheel, backWheel } = createCar();\n\n    // create an engine\n    const initEngine = Engine.create();\n\n    // create a renderer\n    const render = Render.create({\n      element: document.getElementById(\"physics\"),\n      engine: initEngine,\n      options: {\n        showAngleIndicator: true,\n        showCollisions: true,\n        width: 2200,\n        showDebug: true,\n        showPositions: true,\n        showIds: true,\n        showShadows: true,\n        showVertexNumbers: false,\n        showVelocity: true,\n        showSeparations: true,\n      }\n    });\n\n    const ground = Bodies.rectangle(400, 610, 30000, 60, { isStatic: true });\n\n    const myConstraint = Constraint.create({\n      label: 'Mouse Constraint',\n      pointA: initMouse.position,\n      pointB: { x: 0, y: 0 },\n      length: 0.01,\n      stiffness: 1,\n      angularStiffness: 0,\n      render: {\n        strokeStyle: '#90EE90',\n        lineWidth: 3\n      }\n    });\n\n    const mouseConstraint = MouseConstraint.create(initEngine, { mouse: initMouse, constraint: myConstraint })\n\n\n    World.add(initEngine.world, [\n      ground, mouseConstraint, car]);\n\n    const pyramid2 = Composites.pyramid(1300, 0, 15, 30, 0, 0, function (x, y) {\n      return Bodies.rectangle(x, y, 20, 30);\n    });\n\n    World.add(initEngine.world, pyramid2);\n\n    const runner = Engine.run(initEngine);\n\n    Events.on(runner, \"beforeTick\", function () {\n      Body.setAngularVelocity(backWheel, .5);\n      Body.setAngularVelocity(frontWheel, .5);\n    })\n\n\n    Render.run(render);\n    setEngine(initEngine);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}